/******************************************************************
Site Name:
Author:

Stylesheet: Grid Stylesheet

I've seperated the grid so you can swap it out easily. It's
called at the top the style.scss stylesheet.

There are a ton of grid solutions out there. You should definitely
experiment with your own. Here are some recommendations:

http://gridsetapp.com - Love this site. Responsive Grids made easy.
http://susy.oddbird.net/ - Grids using Compass. Very elegant.
http://gridpak.com/ - Create your own responsive grid.

The grid below is a combination of the 1140 grid and Twitter Boostrap. 
I liked 1140 but Boostrap's grid was way more detailed so I merged them 
together, let's see how this works out. If you want to use 1140, the original 
values are commented out on each line.

******************************************************************/

.onecol    { width: (100 *  1 / 12) + 0%; }
.twocol    { width: (100 *  2 / 12) + 0%; }
.threecol  { width: (100 *  3 / 12) + 0%; }
.fourcol   { width: (100 *  4 / 12) + 0%; }
.fivecol   { width: (100 *  5 / 12) + 0%; }
.sixcol    { width: (100 *  6 / 12) + 0%; }
.sevencol  { width: (100 *  7 / 12) + 0%; }
.eightcol  { width: (100 *  8 / 12) + 0%; }
.ninecol   { width: (100 *  9 / 12) + 0%; }
.tencol    { width: (100 * 10 / 12) + 0%; }
.elevencol { width: (100 * 11 / 12) + 0%; }
.twelvecol { width: (100 * 12 / 12) + 0%; }

$slab: 7px;

// layout & column defaults
.onecol, .twocol, .threecol, .fourcol, .fivecol, .sixcol, .sevencol, .eightcol, .ninecol, .tencol, .elevencol, .twelvecol {
  position: relative;
  float: left;
  padding: 0 $slab;
}

.first {
  margin-left: 0;
}

.last {
  float: right;
}

.alert,
.article-header .byline,
.footer p,
.entry-content p,
.entry-content ul,
form p, h1, h2, h3, h4, h5, h6,
.article-footer {
  padding: 0 $slab;
}
.entry-content ul {
  padding-left: $slab * 5;
}


/******************************************************************
Site Name:
Author:

Stylesheet: Grid Stylesheet

I've seperated the grid so you can swap it out easily. It's
called at the top the style.scss stylesheet.

There are a ton of grid solutions out there. You should definitely
experiment with your own. Here are some recommendations:

http://gridsetapp.com - Love this site. Responsive Grids made easy.
http://susy.oddbird.net/ - Grids using Compass. Very elegant.
http://gridpak.com/ - Create your own responsive grid.

The grid below is a combination of the 1140 grid and Twitter Boostrap. 
I liked 1140 but Boostrap's grid was way more detailed so I merged them 
together, let's see how this works out. If you want to use 1140, the original 
values are commented out on each line.

******************************************************************/

.onecol    { width: 5.801104972%;  }       /* 4.85%;  } /* grid_1  */



.twocol    { width: 14.364640883%; }       /* 13.45%; } /* grid_2  */
.threecol  { width: 22.928176794%; }       /* 22.05%; } /* grid_3  */
.fourcol   { width: 31.491712705%; }       /* 30.75%; } /* grid_4  */
.fivecol   { width: 40.055248616%; }       /* 39.45%; } /* grid_5  */
.sixcol    { width: 48.618784527%; }       /* 48%;    } /* grid_6  */
.sevencol  { width: 57.182320438000005%; } /* 56.75%; } /* grid_7  */
.eightcol  { width: 65.74585634900001%; }  /* 65.4%;  } /* grid_8  */
.ninecol   { width: 74.30939226%; }        /* 74.05%; } /* grid_9  */
.tencol    { width: 82.87292817100001%; }  /* 82.7%;  } /* grid_10 */
.elevencol { width: 91.436464082%; }       /* 91.35%; } /* grid_11 */
.twelvecol { width: 99.999999993%; }       /* 100%;   } /* grid_12 */
$gutter: 100% / 36.2;
$gutter_em: 1em;
@function grid_width($n, $use_calc: false) {
	$divisor: 12 / $n;
	@if ($use_calc) {
		$gutter_offset: $gutter_em * ($divisor - 1);
		@return calc((100% - #{$gutter_offset}) / #{$divisor});
	}
	@else {
		@return (100% - $gutter * ($divisor - 1)) / $divisor;
	}
}
.onecol {
	width: grid_width(  1 );
	width: grid_width(  1, true );
}
.twocol {
	width: grid_width(  2 );
	width: grid_width(  2, true );
}
.threecol {
	width: grid_width(  3 );
	width: grid_width(  3, true );
}
.fourcol {
	width: grid_width(  4 );
	width: grid_width(  4, true );
}
.fivecol {
	width: grid_width(  5 );
	width: grid_width(  5, true );
}
.sixcol {
	width: grid_width(  6 );
	width: grid_width(  6, true );
}
.sevencol {
	width: grid_width(  7 );
	width: grid_width(  7, true );
}
.eightcol {
	width: grid_width(  8 );
	width: grid_width(  8, true );
}
.ninecol {
	width: grid_width(  9 );
	width: grid_width(  9, true );
}
.tencol {
	width: grid_width( 10 );
	width: grid_width( 10, true );
}
.elevencol {
	width: grid_width( 11 );
	width: grid_width( 11, true );
}
.twelvecol {
	width: grid_width( 12 );
	width: grid_width( 12, true );
}

// layout & column defaults
.onecol, .twocol, .threecol, .fourcol, .fivecol, .sixcol, .sevencol, .eightcol, .ninecol, .tencol, .elevencol, .twelvecol {
  position: relative;
  float: left;
  margin-left: $gutter;
  margin-left: calc(#{$gutter_em} * 1);
}

.first {
  margin-left: 0;
}

.last {
  float: right;
}