/******************************************************************
Site Name:
Author:

Stylesheet: Grid Stylesheet

I've seperated the grid so you can swap it out easily. It's
called at the top the style.scss stylesheet.

There are a ton of grid solutions out there. You should definitely
experiment with your own. Here are some recommendations:

http://gridsetapp.com - Love this site. Responsive Grids made easy.
http://susy.oddbird.net/ - Grids using Compass. Very elegant.
http://gridpak.com/ - Create your own responsive grid.

The grid below is a combination of the 1140 grid and Twitter Boostrap. 
I liked 1140 but Boostrap's grid was way more detailed so I merged them 
together, let's see how this works out. If you want to use 1140, the original 
values are commented out on each line.

******************************************************************/

.onecol    { width: (100 *  1 / 12) + 0%; }
.twocol    { width: (100 *  2 / 12) + 0%; }
.threecol  { width: (100 *  3 / 12) + 0%; }
.fourcol   { width: (100 *  4 / 12) + 0%; }
.fivecol   { width: (100 *  5 / 12) + 0%; }
.sixcol    { width: (100 *  6 / 12) + 0%; }
.sevencol  { width: (100 *  7 / 12) + 0%; }
.eightcol  { width: (100 *  8 / 12) + 0%; }
.ninecol   { width: (100 *  9 / 12) + 0%; }
.tencol    { width: (100 * 10 / 12) + 0%; }
.elevencol { width: (100 * 11 / 12) + 0%; }
.twelvecol { width: (100 * 12 / 12) + 0%; }

$slab: 7px;

// layout & column defaults
.onecol, .twocol, .threecol, .fourcol, .fivecol, .sixcol, .sevencol, .eightcol, .ninecol, .tencol, .elevencol, .twelvecol {
  position: relative;
  float: left;
  padding: 0 $slab;
}

.first {
  margin-left: 0;
}

.last {
  float: right;
}

.alert,
.article-header .byline,
.footer p,
.entry-content p,
.entry-content ul,
form p, h1, h2, h3, h4, h5, h6,
.article-footer {
  padding: 0 $slab;
}
.entry-content ul {
  padding-left: $slab * 5;
}
